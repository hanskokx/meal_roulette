schema {
  query: query_root
  subscription: subscription_root
}

"""whether this query should be cached (Hasura Cloud only)"""
directive @cached(
  """measured in seconds"""
  ttl: Int! = 60

  """refresh the cache entry"""
  refresh: Boolean! = false
) on QUERY

"""ordering argument of a cursor"""
enum cursor_ordering {
  """ascending ordering of the cursor"""
  ASC

  """descending ordering of the cursor"""
  DESC
}

scalar float8

"""
Boolean expression to compare columns of type "float8". All fields are combined with logical 'AND'.
"""
input float8_comparison_exp {
  _eq: float8
  _gt: float8
  _gte: float8
  _in: [float8!]
  _is_null: Boolean
  _lt: float8
  _lte: float8
  _neq: float8
  _nin: [float8!]
}

"""
Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'.
"""
input Int_comparison_exp {
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int!]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int!]
}

"""
columns and relationships of "meal_roulette_app.meals"
"""
type meal_roulette_app_meals {
  description: String!
  id: Int!
  ingredients: String!
  picture: String!
  title: String!
}

"""
aggregated selection of "meal_roulette_app.meals"
"""
type meal_roulette_app_meals_aggregate {
  aggregate: meal_roulette_app_meals_aggregate_fields
  nodes: [meal_roulette_app_meals!]!
}

"""
aggregate fields of "meal_roulette_app.meals"
"""
type meal_roulette_app_meals_aggregate_fields {
  avg: meal_roulette_app_meals_avg_fields
  count(columns: [meal_roulette_app_meals_select_column!], distinct: Boolean): Int!
  max: meal_roulette_app_meals_max_fields
  min: meal_roulette_app_meals_min_fields
  stddev: meal_roulette_app_meals_stddev_fields
  stddev_pop: meal_roulette_app_meals_stddev_pop_fields
  stddev_samp: meal_roulette_app_meals_stddev_samp_fields
  sum: meal_roulette_app_meals_sum_fields
  var_pop: meal_roulette_app_meals_var_pop_fields
  var_samp: meal_roulette_app_meals_var_samp_fields
  variance: meal_roulette_app_meals_variance_fields
}

"""aggregate avg on columns"""
type meal_roulette_app_meals_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "meal_roulette_app.meals". All fields are combined with a logical 'AND'.
"""
input meal_roulette_app_meals_bool_exp {
  _and: [meal_roulette_app_meals_bool_exp!]
  _not: meal_roulette_app_meals_bool_exp
  _or: [meal_roulette_app_meals_bool_exp!]
  description: String_comparison_exp
  id: Int_comparison_exp
  ingredients: String_comparison_exp
  picture: String_comparison_exp
  title: String_comparison_exp
}

"""aggregate max on columns"""
type meal_roulette_app_meals_max_fields {
  description: String
  id: Int
  ingredients: String
  picture: String
  title: String
}

"""aggregate min on columns"""
type meal_roulette_app_meals_min_fields {
  description: String
  id: Int
  ingredients: String
  picture: String
  title: String
}

"""Ordering options when selecting data from "meal_roulette_app.meals"."""
input meal_roulette_app_meals_order_by {
  description: order_by
  id: order_by
  ingredients: order_by
  picture: order_by
  title: order_by
}

"""
select columns of table "meal_roulette_app.meals"
"""
enum meal_roulette_app_meals_select_column {
  """column name"""
  description

  """column name"""
  id

  """column name"""
  ingredients

  """column name"""
  picture

  """column name"""
  title
}

"""aggregate stddev on columns"""
type meal_roulette_app_meals_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type meal_roulette_app_meals_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type meal_roulette_app_meals_stddev_samp_fields {
  id: Float
}

"""
Streaming cursor of the table "meal_roulette_app_meals"
"""
input meal_roulette_app_meals_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: meal_roulette_app_meals_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input meal_roulette_app_meals_stream_cursor_value_input {
  description: String
  id: Int
  ingredients: String
  picture: String
  title: String
}

"""aggregate sum on columns"""
type meal_roulette_app_meals_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type meal_roulette_app_meals_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type meal_roulette_app_meals_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type meal_roulette_app_meals_variance_fields {
  id: Float
}

"""column ordering options"""
enum order_by {
  """in ascending order, nulls last"""
  asc

  """in ascending order, nulls first"""
  asc_nulls_first

  """in ascending order, nulls last"""
  asc_nulls_last

  """in descending order, nulls first"""
  desc

  """in descending order, nulls first"""
  desc_nulls_first

  """in descending order, nulls last"""
  desc_nulls_last
}

type query_root {
  """
  fetch data from the table: "meal_roulette_app.meals"
  """
  meal_roulette_app_meals(
    """distinct select on columns"""
    distinct_on: [meal_roulette_app_meals_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [meal_roulette_app_meals_order_by!]

    """filter the rows returned"""
    where: meal_roulette_app_meals_bool_exp
  ): [meal_roulette_app_meals!]!

  """
  fetch aggregated fields from the table: "meal_roulette_app.meals"
  """
  meal_roulette_app_meals_aggregate(
    """distinct select on columns"""
    distinct_on: [meal_roulette_app_meals_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [meal_roulette_app_meals_order_by!]

    """filter the rows returned"""
    where: meal_roulette_app_meals_bool_exp
  ): meal_roulette_app_meals_aggregate!

  """
  fetch data from the table: "meal_roulette_app.meals" using primary key columns
  """
  meal_roulette_app_meals_by_pk(id: Int!): meal_roulette_app_meals
}

"""
Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String

  """does the column match the given case-insensitive pattern"""
  _ilike: String
  _in: [String!]

  """
  does the column match the given POSIX regular expression, case insensitive
  """
  _iregex: String
  _is_null: Boolean

  """does the column match the given pattern"""
  _like: String
  _lt: String
  _lte: String
  _neq: String

  """does the column NOT match the given case-insensitive pattern"""
  _nilike: String
  _nin: [String!]

  """
  does the column NOT match the given POSIX regular expression, case insensitive
  """
  _niregex: String

  """does the column NOT match the given pattern"""
  _nlike: String

  """
  does the column NOT match the given POSIX regular expression, case sensitive
  """
  _nregex: String

  """does the column NOT match the given SQL regular expression"""
  _nsimilar: String

  """
  does the column match the given POSIX regular expression, case sensitive
  """
  _regex: String

  """does the column match the given SQL regular expression"""
  _similar: String
}

type subscription_root {
  """
  fetch data from the table: "meal_roulette_app.meals"
  """
  meal_roulette_app_meals(
    """distinct select on columns"""
    distinct_on: [meal_roulette_app_meals_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [meal_roulette_app_meals_order_by!]

    """filter the rows returned"""
    where: meal_roulette_app_meals_bool_exp
  ): [meal_roulette_app_meals!]!

  """
  fetch aggregated fields from the table: "meal_roulette_app.meals"
  """
  meal_roulette_app_meals_aggregate(
    """distinct select on columns"""
    distinct_on: [meal_roulette_app_meals_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [meal_roulette_app_meals_order_by!]

    """filter the rows returned"""
    where: meal_roulette_app_meals_bool_exp
  ): meal_roulette_app_meals_aggregate!

  """
  fetch data from the table: "meal_roulette_app.meals" using primary key columns
  """
  meal_roulette_app_meals_by_pk(id: Int!): meal_roulette_app_meals

  """
  fetch data from the table in a streaming manner: "meal_roulette_app.meals"
  """
  meal_roulette_app_meals_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [meal_roulette_app_meals_stream_cursor_input]!

    """filter the rows returned"""
    where: meal_roulette_app_meals_bool_exp
  ): [meal_roulette_app_meals!]!
}

